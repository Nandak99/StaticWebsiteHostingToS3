AWSTemplateFormatVersion: '2010-09-09'

## =================== DESCRIPTION =================== ##
Description: >-
  AWS CloudFormation sample template
  - Create a new CodeBuild project that gets the source code from GitHub and drops the build artifacts into S3 bucket that hosts the static website
  - Create a new role for CodeBuild

## =================== PARAMETERS =================== ##
Parameters:
  paramCodeBuildProjectName:
    Description: Specify a unique name for project
    Type: String
    Default: cicd-codebuild-for-static-website-hosting-to-s3
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters
  paramRepoName:
    Type: String
    Description: Repository name that contains initial source code
    Default: cicd-pipeline-repo
  paramAppName:
    Type: String
    Description: Specify your Linux application name
    Default: cicd-dotnet-webapp
  paramUniqueTagName:
    Description: Specify a unique name for tag
    Type: String
    Default: static-website-hosting-to-s3
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters

## =================== RESOURCES =================== ##
Resources:

# kali - cicd-codebuild-artifacts-bucket

  # Create a new role for CodeBuild
  myCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cicd-codebuild-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'codecommit:GitPull'
                Effect: Allow
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${paramRepoName}
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:ListBucket'
                Effect: Allow
                Resource:
                  - !Sub arn:aws:s3:::codepipeline-${AWS::Region}-*
                  - !Sub arn:aws:s3:::${myS3BucketForCodeBuildArtifacts}/*
                  - !Sub arn:aws:s3:::${myS3BucketForCodeBuildArtifacts}

  # Create a new CodeBuild project that gets the source code from AWS CodeCommit and drops the build artifacts into S3 bucket
  myCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref paramCodeBuildProjectName
      Description: CodeBuild project for automatically build of static website hosted on s3
      ServiceRole: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${myCodeBuildRole}'
      Source:
        Type: GITHUB
        Location: https://github.com/Tiamatt/StaticWebsiteHostingToS3.git
        GitCloneDepth: 1
        BuildSpec: bff-app/src/main/codebuild/dev/buildspec.yml
      Artifacts: # drop the build artifacts of your app into S3 bucket
        Type: S3
        Name: !Ref paramAppName
        Location: !Ref myS3BucketForCodeBuildArtifacts
      Environment: # use Linux OS for build
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
      TimeoutInMinutes: 15

## =================== OUTPUT =================== ##
Outputs:
  outputS3BucketForCodeBuildArtifacts:
      Value: !Ref myS3BucketForCodeBuildArtifacts
      Description: S3 bucket name for CodeBuild artifacts
  outputCodeBuildProject:
    Description: CodeBuild project name
    Value: !Ref myCodeBuildProject