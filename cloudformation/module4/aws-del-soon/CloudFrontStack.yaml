AWSTemplateFormatVersion: '2010-09-09'
Description: ACFS3 - CloudFront with Header Security and site content
Transform: AWS::Serverless-2016-10-31
Parameters:
  CertificateArn:
    Description: Certificate locater
    Type: String
  DomainName:
    Description: Apex domain
    Type: String
  SubDomain:
    Description: Subdomain
    Type: String
  S3BucketLogs:
    Description: Logging Bucket
    Type: String
  S3BucketRoot:
    Description: Content Bucket
    Type: String
  S3BucketLogsName:
    Description: Logging Bucket
    Type: String
  S3BucketRootName:
    Description: Content Bucket
    Type: String
  S3BucketRootArn:
    Description: Content Bucket locator
    Type: String
  CreateApex:
    Type: String
Conditions:
  CreateApexConfig:
    Fn::Equals:
    - Ref: CreateApex
    - 'yes'
Resources:
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3BucketRoot
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource:
            Fn::Sub: ${S3BucketRootArn}/*
          Principal:
            CanonicalUser:
              Fn::GetAtt:
              - CloudFrontOriginAccessIdentity
              - S3CanonicalUserId
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
        - Fn::Sub: ${SubDomain}.${DomainName}
        - Fn::If:
          - CreateApexConfig
          - Ref: DomainName
          - Ref: AWS::NoValue
        DefaultCacheBehavior:
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            QueryString: true
          MaxTTL: 31536000
          TargetOriginId:
            Fn::Sub: S3-${AWS::StackName}-root
          ViewerProtocolPolicy: redirect-to-https
          ResponseHeadersPolicyId:
            Ref: ResponseHeadersPolicy
        CustomErrorResponses:
        - ErrorCachingMinTTL: 60
          ErrorCode: 404
          ResponseCode: 404
          ResponsePagePath: /404.html
        - ErrorCachingMinTTL: 60
          ErrorCode: 403
          ResponseCode: 403
          ResponsePagePath: /403.html
        Enabled: true
        HttpVersion: http2
        DefaultRootObject: index.html
        IPV6Enabled: true
        Logging:
          Bucket:
            Ref: S3BucketLogsName
          IncludeCookies: false
          Prefix: cdn/
        Origins:
        - DomainName:
            Ref: S3BucketRootName
          Id:
            Fn::Sub: S3-${AWS::StackName}-root
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Join:
              - ''
              - - origin-access-identity/cloudfront/
                - Ref: CloudFrontOriginAccessIdentity
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn:
            Ref: CertificateArn
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only
      Tags:
      - Key: Solution
        Value: ACFS3
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          Fn::Sub: CloudFront OAI for ${SubDomain}.${DomainName}
  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName:
        Fn::Sub: ${DomainName}.
      RecordSets:
      - Name:
          Fn::Sub: ${SubDomain}.${DomainName}
        Type: A
        AliasTarget:
          DNSName:
            Fn::GetAtt:
            - CloudFrontDistribution
            - DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
  ApexRoute53RecordSetGroup:
    Condition: CreateApexConfig
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName:
        Fn::Sub: ${DomainName}.
      RecordSets:
      - Name:
          Ref: DomainName
        Type: A
        AliasTarget:
          DNSName:
            Fn::GetAtt:
            - CloudFrontDistribution
            - DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
  ResponseHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name:
          Fn::Sub: ${AWS::StackName}-static-site-security-headers
        SecurityHeadersConfig:
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 63072000
            IncludeSubdomains: true
            Override: true
            Preload: true
          ContentSecurityPolicy:
            ContentSecurityPolicy: default-src 'none'; img-src 'self'; script-src
              'self'; style-src 'self'; object-src 'none'
            Override: true
          ContentTypeOptions:
            Override: true
          FrameOptions:
            FrameOption: DENY
            Override: true
          ReferrerPolicy:
            ReferrerPolicy: same-origin
            Override: true
          XSSProtection:
            ModeBlock: true
            Override: true
            Protection: true
Outputs:
  CloudFrontDistribution:
    Description: CloudFront distribution
    Value:
      Fn::GetAtt:
      - CloudFrontDistribution
      - DomainName
  CloudFrontDomainName:
    Description: Website address
    Value:
      Fn::Sub: ${SubDomain}.${DomainName}
